name: Build Core

permissions:
  contents: write

on:
  push:
    tags:
      - v*.*.*
      - v*.*.*-debug.*

jobs:
  build_core:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: windows-latest
            target: x86_64-pc-windows-msvc

    name: stable - ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    defaults:
      run:
        working-directory: ./core

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./core/target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}

      - name: Detect build type
        id: build-type
        shell: bash
        run: |
          if [[ "${GITHUB_REF##*/}" == *"-debug."* ]]; then
            echo "BUILD_TYPE=debug" >> "$GITHUB_OUTPUT"
          else
            echo "BUILD_TYPE=release" >> "$GITHUB_OUTPUT"
          fi

      - name: Build
        shell: bash
        run: |
          BUILD_TYPE="${{ steps.build-type.outputs.BUILD_TYPE }}"
          if [ "$BUILD_TYPE" = "release" ]; then
            cargo build --release --target ${{ matrix.target }}
          else
            cargo build --target ${{ matrix.target }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: core-${{ matrix.target }}
          path: ./core/target/${{ matrix.target }}/${{ steps.build-type.outputs.BUILD_TYPE }}/core${{ matrix.target == 'x86_64-pc-windows-msvc' && '.exe' || '' }}

  release:
    needs: build_core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Generate changelog since last release
        id: changelog
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ || echo "")
          echo "Last tag: $LAST_TAG"
          if [ -n "$LAST_TAG" ]; then
            git log --pretty=format:'* %s (%h)' $LAST_TAG..HEAD > body.md
          else
            echo "Initial release" > body.md
          fi

      - name: Check if prerelease
        id: prerelease
        run: |
          TAG="${GITHUB_REF##*/}"
          if [[ "$TAG" == *"-debug."* ]]; then
            echo "PRERELEASE=true" >> "$GITHUB_OUTPUT"
          else
            echo "PRERELEASE=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: body.md
          prerelease: ${{ contains(github.ref_name, '-debug.') }}
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
